openapi: 3.0.3
info:
  title: ITEZ API
  version: 1.0.0
  description: Comprehensive data management of Intersex and Trans-persons in Zambia
paths:
  /api/districts/:
    get:
      operationId: api_districts_list
      description: API end point for District model list, create and update.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DistrictModel'
          description: ''
    post:
      operationId: api_districts_create
      description: API end point for District model list, create and update.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistrictModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DistrictModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DistrictModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistrictModel'
          description: ''
  /api/districts/{id}/:
    get:
      operationId: api_districts_retrieve
      description: API end point for District model list, create and update.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this district.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistrictModel'
          description: ''
    put:
      operationId: api_districts_update
      description: API end point for District model list, create and update.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this district.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DistrictModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DistrictModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DistrictModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistrictModel'
          description: ''
    patch:
      operationId: api_districts_partial_update
      description: API end point for District model list, create and update.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this district.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDistrictModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDistrictModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDistrictModel'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistrictModel'
          description: ''
  /api/provinces/:
    get:
      operationId: api_provinces_list
      description: API end point for Province model list, create and update.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProvinceModel'
          description: ''
    post:
      operationId: api_provinces_create
      description: API end point for Province model list, create and update.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvinceModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProvinceModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProvinceModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvinceModel'
          description: ''
  /api/provinces/{id}/:
    get:
      operationId: api_provinces_retrieve
      description: API end point for Province model list, create and update.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Province.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvinceModel'
          description: ''
    put:
      operationId: api_provinces_update
      description: API end point for Province model list, create and update.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Province.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvinceModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProvinceModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProvinceModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvinceModel'
          description: ''
    patch:
      operationId: api_provinces_partial_update
      description: API end point for Province model list, create and update.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Province.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProvinceModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProvinceModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProvinceModel'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvinceModel'
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/service_area/:
    get:
      operationId: api_service_area_list
      description: API end point for ServiceArea model list, create and update.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceAreaModel'
          description: ''
    post:
      operationId: api_service_area_create
      description: API end point for ServiceArea model list, create and update.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAreaModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceAreaModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceAreaModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAreaModel'
          description: ''
  /api/service_area/{id}/:
    get:
      operationId: api_service_area_retrieve
      description: API end point for ServiceArea model list, create and update.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service area.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAreaModel'
          description: ''
    put:
      operationId: api_service_area_update
      description: API end point for ServiceArea model list, create and update.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service area.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAreaModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ServiceAreaModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ServiceAreaModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAreaModel'
          description: ''
    patch:
      operationId: api_service_area_partial_update
      description: API end point for ServiceArea model list, create and update.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this service area.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedServiceAreaModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedServiceAreaModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedServiceAreaModel'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAreaModel'
          description: ''
  /api/token/:
    post:
      operationId: api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/users/:
    get:
      operationId: api_users_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/users/{username}/:
    get:
      operationId: api_users_retrieve
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_update
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_partial_update
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/me/:
    get:
      operationId: api_users_me_retrieve
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/work_detail/:
    get:
      operationId: api_work_detail_list
      description: API end point for WorkDetail model list, create and update.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WorkDetailModel'
          description: ''
    post:
      operationId: api_work_detail_create
      description: API end point for WorkDetail model list, create and update.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkDetailModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkDetailModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkDetailModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkDetailModel'
          description: ''
  /api/work_detail/{id}/:
    get:
      operationId: api_work_detail_retrieve
      description: API end point for WorkDetail model list, create and update.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this work detail.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkDetailModel'
          description: ''
    put:
      operationId: api_work_detail_update
      description: API end point for WorkDetail model list, create and update.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this work detail.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkDetailModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkDetailModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkDetailModel'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkDetailModel'
          description: ''
    patch:
      operationId: api_work_detail_partial_update
      description: API end point for WorkDetail model list, create and update.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this work detail.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedWorkDetailModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedWorkDetailModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedWorkDetailModel'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkDetailModel'
          description: ''
  /auth-token/:
    post:
      operationId: auth_token_create
      tags:
      - auth-token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    DistrictModel:
      type: object
      description: District Serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: District
          maxLength: 255
        created:
          type: string
          format: date-time
          readOnly: true
        province:
          type: integer
      required:
      - created
      - id
      - name
      - province
    PatchedDistrictModel:
      type: object
      description: District Serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: District
          maxLength: 255
        created:
          type: string
          format: date-time
          readOnly: true
        province:
          type: integer
    PatchedProvinceModel:
      type: object
      description: Province Serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Province
          maxLength: 255
        created:
          type: string
          format: date-time
          readOnly: true
    PatchedServiceAreaModel:
      type: object
      description: Service Area Serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Service Area
          maxLength: 200
        created:
          type: string
          format: date-time
          readOnly: true
        district:
          type: integer
    PatchedUser:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        name:
          type: string
          title: Name of User
          maxLength: 255
        url:
          type: string
          format: uri
          readOnly: true
    PatchedWorkDetailModel:
      type: object
      description: Work Detail Serializer.
      properties:
        id:
          type: integer
          readOnly: true
        gross_pay:
          type: string
          format: decimal
          pattern: ^\d{0,998}(?:\.\d{0,2})?$
          title: Monthly Salary
        company:
          type: string
          title: Company Name
          maxLength: 200
        insured:
          type: boolean
          title: Company Insured
        work_address:
          type: string
          nullable: true
    ProvinceModel:
      type: object
      description: Province Serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Province
          maxLength: 255
        created:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - id
      - name
    ServiceAreaModel:
      type: object
      description: Service Area Serializer.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Service Area
          maxLength: 200
        created:
          type: string
          format: date-time
          readOnly: true
        district:
          type: integer
      required:
      - created
      - district
      - id
      - name
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    User:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        name:
          type: string
          title: Name of User
          maxLength: 255
        url:
          type: string
          format: uri
          readOnly: true
      required:
      - url
      - username
    WorkDetailModel:
      type: object
      description: Work Detail Serializer.
      properties:
        id:
          type: integer
          readOnly: true
        gross_pay:
          type: string
          format: decimal
          pattern: ^\d{0,998}(?:\.\d{0,2})?$
          title: Monthly Salary
        company:
          type: string
          title: Company Name
          maxLength: 200
        insured:
          type: boolean
          title: Company Insured
        work_address:
          type: string
          nullable: true
      required:
      - company
      - gross_pay
      - id
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
